<div class="h-full flex flex-row gap-8 w-full">
  <.container class="w-3/12 p-7">
    <.live_component
      id={"storage"}
      module={AlgoThinkWeb.StudyGroupLive.StorageModule}
      storage_artifacts={Enum.filter(@crypto_artifacts, fn artifact -> artifact.location == "storage" end)}
    />
  </.container>  

  <.container class="w-5/12">
    <div class="flex flex-col gap-4">
      <.live_component
        id="key_generation"
        module={AlgoThinkWeb.StudyGroupLive.KeyGeneration}
        crypto_artifacts={Enum.filter(@crypto_artifacts, fn artifact -> artifact.location == "key_generation" end)}
        current_user={@current_user}
        study_group_id={@study_group_id}
        type="key_generation"
      />
      <.live_component
        id="encryption"
        module={AlgoThinkWeb.StudyGroupLive.CryptoModule}
        crypto_artifacts={Enum.filter(@crypto_artifacts, fn artifact -> artifact.location == "encryption" end)}
        current_user={@current_user}
        study_group_id={@study_group_id}
        name="Encryption"
        type="encryption"
        action="Encrypt"
      />
      <.live_component
        id="decryption"
        module={AlgoThinkWeb.StudyGroupLive.CryptoModule}
        crypto_artifacts={Enum.filter(@crypto_artifacts, fn artifact -> artifact.location == "decryption" end)}
        current_user={@current_user}
        study_group_id={@study_group_id}
        name="Decryption"
        type="decryption"
        action="Decrypt"
      />
      <.live_component
        id={"sign"}
        module={AlgoThinkWeb.StudyGroupLive.CryptoModule}
        crypto_artifacts={Enum.filter(@crypto_artifacts, fn artifact -> artifact.location == "sign" end)}
        current_user={@current_user}
        study_group_id={@study_group_id}
        name="Sign"
        type="sign"
        action="Create Signature"
      />
      <.live_component
        id={"verify"}
        module={AlgoThinkWeb.StudyGroupLive.CryptoModule}
        crypto_artifacts={Enum.filter(@crypto_artifacts, fn artifact -> artifact.location == "verify" end)}
        current_user={@current_user}
        study_group_id={@study_group_id}
        name="Verify"
        type="verify"
        action="Verify"
      />
    </div>
  </.container>

  <.container class="w-4/12 overflow-auto">
    <div class="relative h-full">
      <div class="h-full pb-12">
        <div id="chat" class="chat overflow-y-scroll h-full gap-3 flex flex-col pb-2">
          <%= for message <- @chat_messages do %>
            <div id={"message-#{message.id}"} phx-mounted={JS.dispatch("algothink:newMessage")} class="flex flex-col">
              <.message attachment={message.attachment} text={message.text} author={message.author.name} self={message.author.id == @current_user.id} time={Time.to_string(Time.add(message.inserted_at, 7200))} />
            </div>
          <% end %>
          <div id="chat-anchor"></div>
        </div>
      </div>

      <form action="" phx-submit="send_message" class="flex flex-row gap-3 absolute bottom-0 w-full">
        <input type="text" name="text" id="text" class="w-full rounded-xl bg-gray-300 border-gray-300 placeholder:text-gray-400 placeholder:font-bold" placeholder="Type a message">
        <button type="submit">
          <.icon name="hero-arrow-right-circle" class="h-10 w-10 bg-blue-500 hover:bg-blue-400 transition-colors" />
        </button>
      </form>
    </div>
  </.container>

  <.container class="fixed -bottom-2 h-1/6 w-2/6 z-50 left-1/2 -translate-x-1/2">
    LÃ¶sungswort
  </.container>
</div>